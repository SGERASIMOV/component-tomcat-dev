application:
  configuration:
    input.quantity: "1"
    input.app-port: "8080" 
    input.image: "us-east-1/ami-1ba18d72"
    input.identity: "ec2-user"
    input.instance-size: "m1.small"
    input.java-opts: "-Duser.timezone=UTC"
    input.recipe-url: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-tomcat-dev-cookbooks-stable-bfa799e.tar.gz"

  interfaces:
    input:
      quantity: "bind(workflow#input.quantity)"
      app-port: "bind(workflow#input.app-port)"
      java-opts: "bind(workflow#input.java-opts)"
      image: "bind(workflow#input.image)"
      identity: "bind(workflow#input.identity)"
      instance-size: "bind(workflow#input.instance-size)"      
      recipe-url: "bind(workflow#input.recipe-url)"
    management:
      build-app: "bind(workflow#actions.build-app)"
      deploy-libs: "bind(workflow#actions.deploy-libs)"
      deploy-war: "bind(workflow#actions.deploy-war)"
      reconfigure: "bind(workflow#actions.reconfigure)"
      manage-service: "bind(workflow#actions.manage-service)"
    output:
      app-hosts: "bind(workflow#result.app-hosts)"
      app-port: "bind(workflow#result.app-port)"

  components:
    workflow:
      type: workflow.Instance
      interfaces:
        input:
          app-port: configuration(string)
          quantity: configuration(string)
          java-opts: configuration(string)
          image: configuration(string)
          identity: configuration(string)
          instance-size: configuration(string)
          recipe-url: configuration(string)
        actions:
          build-app: receive-command(string scm-provider, string git-uri, string app-branch => list<string> wars)
          deploy-libs: receive-command(list<string> lib-uri)
          deploy-war: receive-command(string uri, string path, object context-attrs, object context-nodes)
          reconfigure: receive-command(string java-opts)
          manage-service: receive-command(string service-action)
        result:
          app-hosts: publish-signal(list<string>)
          app-port: publish-signal(string)

      configuration:
        configuration.triggers:
          input.quantity: update
        configuration.workflows:
          update: &update
            parameters:
              - app-port: &app-port
                  default: Tomcat port
              - quantity: &quantity
                  default: Number of servers
              - java-opts: &java-opts
                  default: "Tomcat's additional java options if needed"
            steps:
              - provision-vm:
                  action: provisionAmazonVm
                  parameters:
                    roleName: default
                    hardwareId: "{$.instance-size}"
                    targetQuantity: "{$.quantity}"
                    jcloudsNodeNamePrefix: component
                    vmIdentity: "{$.identity}"
                    imageId: "{$.image}"
                  output:
                    app-hosts: ips

              - tomcat-install:
                  action: "chefsolo"
                  precedingPhases: [ provision-vm ]
                  phase: tomcat-install
                  parameters:
                    roles: [ default ]
                    runList: ["recipe[cookbook-qubell-tomcat]"]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      tomcat:
                        port: "{$.app-port}"

            return:
              app-hosts:
                value: "{$.app-hosts}"
              app-port:
                value: "{$.app-port}"
          launch: *update

          build-app:
            parameters:
              - scm-provider:
                  description: CVS git or subversion
                  default: "git"
              - git-uri:
                  description: source repository
              - app-branch:
                  description: source branch

            steps:
              - build-app:
                  action: "chefrun"
                  phase: build-app
                  parameters:
                    isSolo: true
                    roles: [ default ]
                    runList: [ "recipe[cookbook-qubell-build]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      scm:
                        provider: "{$.scm-provider}"
                        repository: "{$.git-uri}"
                        revision: "{$.app-branch}"
                  output:
                    chefAttrs: chefState
            return:
              wars:
                value: "{$.chefAttrs['*'][0].build.artefacts}"
          deploy-libs:
            parameters:
              - lib-uri:
                  description: Necessary tomcat libs

            steps:
              - deploy-libs:
                  action: "chefrun"
                  phase: deploy-libs
                  parameters:
                    isSolo: true
                    roles: [ default ]
                    runList: [ "recipe[cookbook-qubell-tomcat::deploy_libs]" ]
                    recipeUrl: "{$.recipe-url}" 
                    jattrs:
                      tomcat-component:
                        lib_uri: "{$.lib-uri}"

          deploy-war:
            parameters:
              - uri:
                  description: WAR uri
              - path:
                  description: APP name
              - context-attrs:
                  description: Context parameters for context.xml
              - context-nodes:
                  description: Resources, environments, etc for context.xml

            steps:
              - deploy-war:
                  action: "chefrun"
                  phase: deploy-war
                  parameters:
                    isSolo: true
                    roles: [ default ]
                    runList: [ "recipe[cookbook-qubell-tomcat::deploy_war]" ]
                    recipeUrl: "{$.recipe-url}" 
                    jattrs:
                      tomcat-component:
                        war:
                          uri: "{$.uri}"
                          path: "{$.path}"
                        context:
                          context_attrs: "{$.context-attrs}"
                          context_nodes: "{$.context-nodes}"
          reconfigure:
            parameters:
              - java-opts:
                  description: "Tomcat's additional java options if needed"
            steps:
              - reconfigure-tomcat:
                  action: "chefrun"
                  phase: reconfigure-tomcat
                  parameters:
                    isSolo: true
                    roles: [default]
                    runList: ["recipe[cookbook-qubell-tomcat]"]
                    recipeUrl: "{$.recipe-url}" 
                    jattrs:
                      tomcat:
                        port: "{$.app-port}"
                        java_options: "{$.java-opts}"

          manage-service:
            parameters:
              - service-action:
                  description: "Run stop/start action on service"
            steps:
              - run-service-action:
                  action: "chefrun"
                  phase: "run-service-action"
                  parameters:
                    isSolo: true
                    roles: [default]
                    runList: ["recipe[cookbook-qubell-tomcat::manage]"]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      base:
                        manage:
                          services: ["tomcat6"]
                          action: "{$.service-action}"

